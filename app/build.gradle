plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

android {
    namespace 'com.example.weartilecheck'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.weartilecheck"
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.play.services.wearable
    implementation platform(libs.compose.bom)
    implementation libs.ui
    implementation libs.ui.tooling.preview
    implementation libs.compose.material
    implementation libs.compose.foundation
    implementation libs.wear.tooling.preview
    implementation libs.activity.compose
    implementation libs.core.splashscreen
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation libs.ui.test.junit4
    debugImplementation libs.ui.tooling
    debugImplementation libs.ui.test.manifest

    // Use to implement support for wear tiles
    implementation libs.tiles

    // Use to utilize standard components and layouts in your tiles
    implementation libs.protolayout

    // Use to utilize components and layouts with Material Design in your tiles
    implementation libs.protolayout.material

    // Use to include dynamic expressions in your tiles
    implementation libs.protolayout.expression

    // Use to preview wear tiles in your own app
    debugImplementation libs.tiles.renderer

    // Use to fetch tiles from a tile provider in your tests
    testImplementation libs.tiles.testing

    implementation libs.guava
}